<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

# AppleScript strings cannot handle Unicode text, so
# any Unicode characters entered in a string will
# simply be dropped when the script is run.  However,
# a Unicode text object obviously has no trouble
# accepting any characters.  This command toggles
# between raw unicode data and a " delimited string,
# to simplify the creation of Unicode text objects.

case txt = STDIN.read
  when /\A«data utxt([0-9A-F]+)»(?: as Unicode text)?\z/i then
    decoded = $1.gsub(/([0-9A-F]{4})/i) { |m| [$1.hex].pack("U") }
    print '"' + decoded + '"'

  when /\A«data utf8([0-9A-F]+)»(?: as Unicode text)?\z/i then
    decoded = $1.gsub(/../) { |i| i.hex.chr }
    print '"' + decoded + '"'

  when /\A"(.*)"\z/ then
    encoded = ""
    $1.each_byte { |b| encoded &lt;&lt; format("%02X", b) }
    print '«data utf8' + encoded + '» as Unicode text'

  else
    print txt
end
</string>
	<key>fallbackInput</key>
	<string>scope</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^"</string>
	<key>name</key>
	<string>Toggle String / «data utf8»</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>string.quoted.double.applescript, meta.data.applescript</string>
	<key>uuid</key>
	<string>7B6716C8-A890-4803-8C61-5E31F1A4BE63</string>
</dict>
</plist>
