<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string># In order to use this command, you need this to install flashcommand:
# http://www.markme.com/mesh/archives/004419.cfm
#
#
# You can optionally set these shell variables in the project information:
#
# FLASH_FLA_PATH     	/path/to/the/fla/file
# FLASH_TEST_URL     	http://localhost/my_page_displaying_the_swf.php
# FLASH_SWF_SAVE_PATH 	/path/where/copy/the/compiled/swf/file if successful
#
# If FLASH_FLA_PATH is not set, the selected .fla file in the project drawer will be used.
# If FLASH_TEST_URL is not set, the resulting .swf is used directly
#

. "$TM_SUPPORT_PATH/lib/webpreview.sh"
html_header "Build in Flash"

require_cmd flashcommand

SWF="/tmp/temp.swf"
FLASHCOMMAND=flashcommand

# if a .fla file is selected, build it
# if not, try to build $FLASH_FLA_PATH

if [ "${TM_SELECTED_FILE##*.}" == "fla" ]
then
	FLA="$TM_SELECTED_FILE"
elif [ $FLASH_FLA_PATH ]
then
	FLA="$FLASH_FLA_PATH"
fi

result=`"$FLASHCOMMAND" -e -s "$FLA" -o "$SWF"`

#flashcommand output is very dirty and windoze like. Let's format it!
"${TM_RUBY:-ruby}" "${TM_BUNDLE_SUPPORT}/formatBuildInFlashOutput.rb" "$result"

if [ "$?" == 0 ]
then
	if [ $FLASH_SWF_SAVE_PATH ]
	then
		cp "$SWF" "$FLASH_SWF_SAVE_PATH"
	fi

	if [ $FLASH_TEST_URL ]
	then
		open "$FLASH_TEST_URL"
	else
		if [ $FLASH_SWF_SAVE_PATH ]
		then
			open "$FLASH_SWF_SAVE_PATH"
		else
			open "$SWF"
		fi
	fi
fi</string>
	<key>fileCaptureRegister</key>
	<string>2</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>@b</string>
	<key>lineCaptureRegister</key>
	<string>3</string>
	<key>name</key>
	<string>Build in Flash</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.actionscript</string>
	<key>uuid</key>
	<string>2197A196-78E3-11D9-8177-000A95C5F126</string>
</dict>
</plist>
