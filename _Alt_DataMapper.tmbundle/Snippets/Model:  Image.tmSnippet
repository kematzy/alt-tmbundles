<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>content</key>
	<string>class Image 
  
  ### URL PATHS (relative to SERVER root)
  IMAGES_STORAGE_URL_PATH = '/photos/'
  IMAGES_UPLOAD_URL_PATH  = '/photos/uploaded'
  ### FILE SYSTEM STORAGE PATHS
  root_dir = File.dirname(File.dirname(File.dirname(__FILE__)))
  IMAGES_STORAGE_PATH = "#{root_dir}/public#{IMAGES_STORAGE_URL_PATH}"
  IMAGES_UPLOAD_PATH  = "#{root_dir}/public#{IMAGES_UPLOAD_URL_PATH}"
  
  include DataMapper::Resource
  property :id,                   Serial
  # store the filename in the db
  property :filename,             String,   :required =&gt; true, :unique_index =&gt; :filename
  # in case we rename files, let's store the original name as well
  property :filename_original,    String,   :required =&gt; true
  # where is the file stored
  property :path,                 FilePath, :required =&gt; true
  # each image has a default caption
  property :caption,              String
  # when was this record created and updated
  property :created_at,           DateTime
  property :updated_at,           DateTime
  # track who created this record
  property :created_by,           Integer
  property :updated_by,           Integer
  
  ## ASSOCIATIONS
  
  has n, :collection_images
  
  ## VALIDATIONS
  
  # validates_present [:caption]
  
  
  ## CALLBACKS
  
  ## CLASS METHODS
  
  ## INSTANCE METHODS
  
  def url(format=:pr)
    case format
    when :original
    when :hi
      "#{IMAGES_STORAGE_URL_PATH}/hi/#{self.filename}.jpg"
    when :raw
      "#{IMAGES_STORAGE_URL_PATH}/raw/#{self.filename}.jpg"
    when :th
      "#{IMAGES_STORAGE_URL_PATH}/th/#{self.filename}.jpg"
    else
      "#{IMAGES_STORAGE_URL_PATH}/#{format.to_s}/#{self.filename}.jpg"
    end
    
  end
  
end
</string>
	<key>name</key>
	<string>Model:  Image</string>
	<key>scope</key>
	<string>source.ruby.datamapper</string>
	<key>tabTrigger</key>
	<string>dm-image</string>
	<key>uuid</key>
	<string>29499A6C-6C13-43BE-93A4-D93F834C2B5E</string>
</dict>
</plist>
